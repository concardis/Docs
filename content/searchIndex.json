[
	{
		"url": "/faq",
		"title": "Payment Methods - overview and introduction",
		"filter": "faq",
		"tags": "credit card creditcard ratepay paypal ratepay paydirekt sofort",
		"content": "credit card creditcard ratepay paypal ratepay paydirekt sofort faq"
	},
	{
		"url": "/outofthebox/widgetmenu/ourwidget",
		"title": "Widget Integration - easy copy n pase solution",
		"filter": "easyintegration",
		"tags": "Widget Integration",
		"content": "Widget feature is an SAQ-A compliant solution, which gives you a styled out-of-the-box payment form for end customers, both as a modal view or directly in your website."
	},
	{
		"url": "/outofthebox/widgetmenu/modalwidget",
		"title": "Modal Widget",
		"filter": "easyintegration",
		"tags": "Modal Widget Integration",
		"content": "In order to use this functionality, every integrator should execute only 2 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsModal() function on PayEngineWidget object to display the payment form in modal view Here is snippet how your html could look like:"
	},
	{
		"url": "/outofthebox/widgetmenu/modalwidgetreference",
		"title": "Modal Widget Reference",
		"filter": "easyintegration",
		"tags": "Modal Widget Reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow. ! Important -> All methods should be called on PayEngineWidget object (e.g PayEngineWidget.desiredMethod(parameters))."
	},
	{
		"url": "/outofthebox/widgetmenu/inlinewidget",
		"title": "Inline Widget Implementation",
		"filter": "easyintegration",
		"tags": "Inline Widget Implementation",
		"content": "In order to use this functionality, every integrator should execute only 3 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsInlineComponent() function on PayEngineWidget object to display the payment form 3. Handle Widget initialization result in initCallback"
	},
	{
		"url": "/outofthebox/widgetmenu/inlinewidgetreference",
		"title": "Inline Widget Reference",
		"filter": "easyintegration",
		"tags": "Inline Widget Reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow."
	},
	{
		"url": "/outofthebox/widgetmenu/piwidget",
		"title": "Widget as a Bridge implementation",
		"filter": "easyintegration",
		"tags": "Widget as a Bridge implementation",
		"content": "In order to use this functionality, every integrator should execute only 3 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsInlineComponentPi() function on PayEngineWidget object to display the payment form 3. Handle Widget initialization result in initCallback"
	},
	{
		"url": "/outofthebox/widgetmenu/piwidgetreference",
		"title": "Widget as a Bridge reference",
		"filter": "easyintegration",
		"tags": "Widget as a Bridge reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow.! Important -> All methods should be called on PayEngineWidget object (e.g PayEngineWidget.desiredMethod(parameters))."
	},
	{
		"url": "/outofthebox/widgetmenu/deviceident",
		"title": "Device Ident",
		"filter": "easyintegration",
		"tags": "Device Ident",
		"content": "Important! Device Ident is available only for ECOM transactions If Device Ident is set to true, Device Ident Token will be send with the transaction object on transaction create"
	},
	{
		"url": "/outofthebox/widgetmenu/widgetexample",
		"title": "Widget Example",
		"filter": "easyintegration",
		"tags": "Widget Example",
		"content": "Example implementation of the Widget"
	},
	{
		"url": "/systemurl/urls",
		"title": "System URLs",
		"filter": "systemurls",
		"tags": "systemurl systemurls system url system urls",
		"content": "All system URLs "
	},
	{
		"url": "/systemurl/pcidss",
		"title": "PCI DSS",
		"filter": "systemurls",
		"tags": "PCI DSS pci dss pcidss saq-a saq-aep saq-d ",
		"content": "The Payment Card Industry Data Security Standards (PCI DSS) is a set of security standards for businesses that handle credit cards from the major card schemes. Its aim is to provide security requirements that help protect sensitive credit card data (also known as the Cardholder Data Environment CDE)"
	},
	{
		"url": "/systemurl/errormessages",
		"title": "Error Messages",
		"filter": "systemurls",
		"tags": "error messages error message api errormessage errormessages",
		"content": "Our RESTful API comes with validations and dedicated error messages that help you as integrator to deal with any kind of exception. The following sections contain detailed information on how validation on API level work, what error messages are transmitted and in which format they are sent."
	},
	{
		"url": "/systemurl/transactionstate",
		"title": "Transaction State Transitions",
		"filter": "systemurls",
		"tags": "Transaction State Transitions transactionstate  transactionstates transitions transactions ",
		"content": "Concardis Payengine comes with an order and state transition concept that allows you as merchant and/or integrator to get information on the current state of a payment, i.e. if funds have been transferred or if a customer got declined by a processor etc. Based on the dedicated status that is always returned through our API, you may take appropriate actions, such as shipping the goods, contact the customer for clarification or similar. "
	},
	{
		"url": "/systemurl/getorders",
		"title": "Validation of Orders - GET Orders",
		"filter": "systemurls",
		"tags": "Validation of Orders get Orders order",
		"content": "GET /orders"
	},
	{
		"url": "/systemurl/postorders",
		"title": "Validation of Orders - POST Orders",
		"filter": "systemurls",
		"tags": "Validation of Orders POST Orders order",
		"content": "POST /orders"
	},
	{
		"url": "/systemurl/postordersaction",
		"title": "Validation of Orders - POST Orders / debit / preauth ",
		"filter": "systemurls",
		"tags": "Validation of Orders POST Orders order POST Orders / debit / preauth",
		"content": "POST /orders  Orders / debit / preauth"
	},
	{
		"url": "/systemurl/postordersorderid",
		"title": "Validation of Orders - POST Orders / OrderId ",
		"filter": "systemurls",
		"tags": "Validation of Orders POST Orders order POST Orders / debit / preauth OrderId",
		"content": "POST /orders / debit / preauth"
	},
	{
		"url": "/systemurl/patchorders",
		"title": "Validation of Orders - PATCH Orders ",
		"filter": "systemurls",
		"tags": "Validation of Orders PATCH Orders order PATCH Orders / debit / preauth OrderId",
		"content": "PATCH /orders / debit / preauth "
	},
	{
		"url": "/outofthebox/paylink",
		"title": "Concardis Paylink",
		"filter": "easyintegration",
		"tags": "Concardis Paylink",
		"content": "An additional very easy possibility to process payments it the Concardis Paylink Would you like to receive partial or advance payments before the service is delivered completely? And give your customers the opportunity to pay quickly and conveniently online with their preferred payment method and channel? Send a Concardis payment link - via e-mail, SMS, WhatsApp or via your social media channels. Your customer can access an individual payment page via the paylink, choose from common payment methods and pay for it. Whether it is a hotel, a travel agency, a government agency or an association that wants to collect membership fees. The Payengine Paylink is suitable for almost all industries and services. Fast, simple and above all safe. "
	},
	{
		"url": "/outofthebox/plugins",
		"title": "Shop Plugins",
		"filter": "easyintegration",
		"tags": "Shop Plugins",
		"content": "Shopware - our own solution Other Plugins can be purchased here. Magento (from v. 1.5.x and higher incl. Enterprise Edition) Magento (v. 2.x CE and EE) WordPress WooCommerce (from v. 2.x / 3.x) WordPress E-Commerce (from v. 3.x) WordPress JigoShop (v. 1.2.x) Shopware (from v. 4.x / 5.x) PrestaShop (from v. 1.5.x / 1.6.x / 1.7.x) xt:Commerce (v. 3.x) Gambio (v. GX 1 / 2) xtcModified (v. 1.x) commerce:SEO (v1 und v2) OpenCart (from v. 1.5.x / ab. V. 2.x) Mijoshop Opencart for Joomla AceShop Opencart for Joomla Oxid eSales (from v. 4.7.x including Enterprise Edition) seo:Mercari (from v. 1.x) JTL 3 (3.x) JTL 4 (4.x) Drupal Commerce (from Drupal 7.x) Only Drupal 7.x Xt:Commerce 4 & 5 (from. V. 4.x / 5.x)"
	},
	{
		"url": "/buildyourown/restdoc/aboutourapi",
		"title": "About our API",
		"filter": "customintegration",
		"tags": "About our API",
		"content": "We offer a REST based API, with HTTP Basic Access Authorization and JSON as payload format."
	},
	{
		"url": "/buildyourown/restdoc/authentication",
		"title": "API Authentication",
		"filter": "customintegration",
		"tags": "API Authentication",
		"content": "Authorization of requests is done via HTTP basic access authentication. HTTP basic accesss authentication header example"
	},
	{
		"url": "/buildyourown/restdoc/errors",
		"title": "API Errors",
		"filter": "customintegration",
		"tags": "API Errors",
		"content": "Our API Endpoints use conventional HTTP response codes to indicate the success or failure of an API request.  In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.), and codes in the 5xx range indicate an error with our backend (these are rare). HttpStatusCode"
	},
	{
		"url": "/buildyourown/restdoc/createcustomer",
		"title": "API create Customer",
		"filter": "customintegration",
		"tags": "API create Customer",
		"content": "Creating a customer is pretty simple, since there is only one value which is mandatory."
	},
	{
		"url": "/buildyourown/restdoc/preformpayment",
		"title": "API perform a payment",
		"filter": "customintegration",
		"tags": "API perform a payment",
		"content": "In this how to we will perform a paypal payment via curl. We start with the body of our request:"
	},
	{
		"url": "/buildyourown/restdoc/refundpayment",
		"title": "API refund a payment",
		"filter": "customintegration",
		"tags": "API refund a payment",
		"content": "n this how to we will perform a refund of paypal payment via curl. Refunds can only be applied on refund or capture transaction with the status SUCCESS. We start with the body of the request:"
	},
	{
		"url": "/buildyourown/restdoc/providercodes",
		"title": "API provider codes",
		"filter": "customintegration",
		"tags": "API provider codes",
		"content": "The Provider Code is the original response Code from the payment provider/ acquirer. It can be found in every transaction response:"
	},
	{
		"url": "/buildyourown/restdoc/phpsdk",
		"title": "API PHP SDK",
		"filter": "customintegration",
		"tags": "API PHP SDK",
		"content": "This is a quickstart guide for using our PHP SDK to accept credit card payments."
	},
	{
		"url": "/buildyourown/restdoc/simulator",
		"title": "API integration test (Simulator)",
		"filter": "customintegration",
		"tags": "API integration test (Simulator)",
		"content": "Our simulator is the simplest way to test your integration in our test enviroment. (apitest.payengine.de) With the simulator you are able to test positive/negative use cases. To get a postive response use 1,00 as amount. To get a negative response use 1,01 as amount. This works for all our products (paypal, sofort, ratepay, paydirekt). To test your credit card integration, create transactions with these PANs:"
	},
	{
		"url": "/buildyourown/apidocu",
		"title": "API Endpoint Structure",
		"filter": "customintegration",
		"tags": "API Endpoint Structure Example",
		"content": "API Endpoint Structure Example"
	},
	{
		"url": "/buildyourown/bridge/ourbridge",
		"title": "Connect to our Bridge",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "To initialize the Bridge API add the JavaScript library to communicate with the EVASION server and provide your merchant id as a public key to identify against it. Add the following code snippet into the page header in a script tag"
	},
	{
		"url": "/buildyourown/bridge/saqasolution",
		"title": "How to implement Bridge SAQ-A solution",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "In order to use this functionality, every integrator should execute only 2 steps: Prepare the HTML form Initialize iframes, call the tokenization JS function and add a callback The following HTML snippet contains the neccessary data for card tokenization with Bridge iframes. Note that the minimal code is the form itself and the input tags, which must not contain name attributes"
	},
	{
		"url": "/buildyourown/bridge/saqareference",
		"title": "Bridge SAQ-A Reference",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow for SAQ-A solution"
	},
	{
		"url": "/buildyourown/bridge/saqaepsolution",
		"title": "How to implement Bridge SAQ-AEP solution",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "In order to use this functionality, every integrator should execute only 2 steps"
	},
	{
		"url": "/buildyourown/bridge/saqaepreference",
		"title": "Bridge SAQ-AEP Reference",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow for SAQ-AEP solution."
	},
	{
		"url": "/buildyourown/bridge/commonreference",
		"title": "Bridge Common Reference",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "Here you can find all methods and variables common for every BridgeJS solution."
	},
	{
		"url": "/buildyourown/bridge/ratepayreference",
		"title": "Bridge RatePAY Reference",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "Here you can find all needed RatePAY helper functions."
	},
	{
		"url": "/buildyourown/bridge/recurringverification",
		"title": "Bridge Recurring verification Reference",
		"filter": "customintegration",
		"tags": "Bridge integration",
		"content": "Here you can find all needed helper functions for recurring payments. These functions will allow you to force the end user to re-enter his verification code for a selected payment instrument."
	},
	{
		"url": "/buildyourown/bridge/support3dsecure",
		"title": "How To Support 3D-secure",
		"filter": "customintegration",
		"tags": "Bridge 3D Secure integration",
		"content": "3D-Secure causes a Redirect. If 3D-Secure is used can be seen in the transaction response. If there is a redirect URL in the response, 3D-Secure is used."
	},
	{
		"url": "/merchantcenter/registration",
		"title": "Create your Merchant Account",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "Create your Merchant Account on: onboarding.payengine.de"
	},
	{
		"url": "/merchantcenter/login",
		"title": "Login to your Merchant Account",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "How to: Login into Merchant Center"
	},
	{
		"url": "/merchantcenter/navigation",
		"title": "Navigation of the Merchant Center",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "How to: Merchant Center Navigation"
	},
	{
		"url": "/merchantcenter/dashboard",
		"title": "Dashboard of the Merchant Center",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "How to: The Dashboard of the Merchant Center"
	},
	{
		"url": "/merchantcenter/createtransaction",
		"title": "Merchant Center Orders - create transaction",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "how to create a transaction in the merchant center"
	},
	{
		"url": "/merchantcenter/errortransaction",
		"title": "Merchant Center Orders - error messages in transaction",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "See error messages in transactions in the merchant center"
	},
	{
		"url": "/merchantcenter/errortransaction",
		"title": "Merchant Center Orders - error messages in transaction",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "See error messages in transactions in the merchant center"
	},
	{
		"url": "/merchantcenter/settlement",
		"title": "Merchant Center Settlements",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco settlement settlements",
		"content": "The Merchant Center provides reconciliation and settlement files for credit card transactions. When a transaction is settled the corresponding data becomes available in a merchant downloadable csv file which can be found under the Settlements section of the Merchant Center. These files contain detailed information for each transaction including: GUID of the transaction VP-Number Terminal-ID ARN Trx.-Date Time Author.-Nr Trace ID Merchant Order ID / Order ID Credit- Debitindikator Revenue in transaction currency (gross) Transaction currency Renvenue in settlement currency (gross) Settlement currency Interchange Fee (payout currency) Card Scheme Fee (payout currency) Acquirer Service Fee (payout currency) MSC Fee (payout currency) VAT (payout currency) Revenue in settlement currency (net amount) GUID Settlement Payment method payment date Sequence Number des Payments"
	},
	{
		"url": "/merchantcenter/customer",
		"title": "Merchant Center - your customers",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "General information about your customers ID, E-Mail, your custom customer IDs, creation and modification date can be found here."
	},
	{
		"url": "/merchantcenter/createcustomer",
		"title": "Merchant Center - create customers",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco create customer",
		"content": "Add the customers E-Mail here, this field is mandatory."
	},
	{
		"url": "/merchantcenter/myaccount",
		"title": "Merchant Center - my Account MerchantID ApiKey",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco",
		"content": "You can view your detailed account information here, like your Merchant ID. Below the account information you can change your password and add a 2 factor autentication, which is recommended. Your private API key can also be found here. For more information about API requests click here."
	},
	{
		"url": "/merchantcenter/paymentmethods",
		"title": "Merchant Center - Paymentmethod configuration",
		"filter": "accounting",
		"tags": "Merchant Center merchantcenter accounting fco payment method configuration",
		"content": "In the first column you can see the payment method type."
	},
	{
		"url": "/merchantcenter/usermanagement",
		"title": "Merchant Center - User Management",
		"filter": "usermanagement",
		"tags": "Merchant Center user management",
		"content": "General information about your users e-mail, creation date, current role and status can be found in this table."
	},
	{
		"url": "/merchantcenter/inviteuser",
		"title": "Merchant Center - User invite",
		"filter": "usermanagement",
		"tags": "Merchant Center user management",
		"content": "You can add the new users E-Mail address here. The user will receive an e-mail with further information."
	},
	{
		"url": "/merchantcenter/paymentinstrument",
		"title": "Merchant Center - Payment Instrument - recurring payments",
		"filter": "recurringpayments",
		"tags": "Merchant Center payment instruments paymentinstrument paymentinstruments",
		"content": "General information about your payment instruments can be found here."
	},
	{
		"url": "/merchantcenter/createpaymentinstrument",
		"title": "Merchant Center - create Payment Instrument",
		"filter": "recurringpayments",
		"tags": "Merchant Center payment instruments paymentinstrument paymentinstruments",
		"content": "General information about your payment instruments can be found here."
	},
	{
		"url": "/merchantcenter/risksetting",
		"title": "Merchant Center - Risk Settings / Fraud Management",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "A risk management tool is essential for reducing fraudulent activity on the platform, protectint our merchants from monetary loss and broadening Concardis' market appearance and reputation."
	},
	{
		"url": "/merchantcenter/notifications_mc",
		"title": "Merchant Center - How to manage notifications",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "A notifications tool allows to merchant to receive notifications about multiple events in the system. Notifications can be sent to e-mail or specific url. Navigation to Notifications Create new Notification View Notification Edit Notification Delete Notification Notification Filters Notification Types Notification Events"
	},
	{
		"url": "/merchantcenter/manageblacklist",
		"title": "Merchant Center - How to manage blacklists",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "Blacklists allow merchant to define lists that will block specific transactions by:"
	},
	{
		"url": "/merchantcenter/manageriskcard",
		"title": "Merchant Center - How to manage risk cards",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "Risk card can be found in Risk settings menu item, Risk card Tab."
	},
	{
		"url": "/merchantcenter/rulecomparison",
		"title": "Merchant Center - Risk comparison (simple) Rule",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "Comparison (simple) Rule defines a logical rule that allows or prohibits the transaction from being executed when the conditions are met."
	},
	{
		"url": "/merchantcenter/rulevelocityrisk",
		"title": "Merchant Center - Risk Limits (velocity) Rule ",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "Limits (velocity) Rule defines a logical rule that allows or prohibits the transaction from being executed when the conditions are met."
	},
	{
		"url": "/merchantcenter/gicc",
		"title": "Merchant Center - GICC Codes ",
		"filter": "fraudmanagement",
		"tags": "Merchant Center Risk Settings  Fraud Management risksettings fraudmanagement fraudmanagements risksetting",
		"content": "GICC Codes"
	}
]
